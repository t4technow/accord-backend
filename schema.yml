openapi: 3.0.3
info:
  title: ACCORD API Documentation
  version: 0.5.3
  description: A simple Django Rest Framework based RESTful web service for managing
    ACCORD data.
paths:
  /api/channels/{server_id}/:
    get:
      operationId: api_channels_retrieve
      parameters:
      - in: path
        name: server_id
        schema:
          type: integer
        required: true
      tags:
      - api
      security:
      - jwtAuth: []
      - {}
      responses:
        '200':
          description: No response body
  /api/channels/{server_pk}/{id}/:
    get:
      operationId: api_channels_retrieve_2
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this channel.
        required: true
      - in: path
        name: server_pk
        schema:
          type: integer
        required: true
      tags:
      - api
      security:
      - jwtAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Channel'
          description: ''
  /api/channels/{server_pk}/{id}/messages/:
    get:
      operationId: api_channels_messages_list
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this message.
        required: true
      - in: path
        name: server_pk
        schema:
          type: integer
        required: true
      tags:
      - api
      security:
      - jwtAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Message'
          description: ''
  /api/channels/{server_pk}/create/:
    post:
      operationId: api_channels_create_create
      parameters:
      - in: path
        name: server_pk
        schema:
          type: integer
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Channel'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Channel'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Channel'
        required: true
      security:
      - jwtAuth: []
      - {}
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Channel'
          description: ''
  /api/channels/{server_pk}/delete/{id}/:
    delete:
      operationId: api_channels_delete_destroy
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this channel.
        required: true
      - in: path
        name: server_pk
        schema:
          type: integer
        required: true
      tags:
      - api
      security:
      - jwtAuth: []
      - {}
      responses:
        '204':
          description: No response body
  /api/channels/{server_pk}/update/{id}/:
    put:
      operationId: api_channels_update_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this channel.
        required: true
      - in: path
        name: server_pk
        schema:
          type: integer
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Channel'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Channel'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Channel'
        required: true
      security:
      - jwtAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Channel'
          description: ''
    patch:
      operationId: api_channels_update_partial_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this channel.
        required: true
      - in: path
        name: server_pk
        schema:
          type: integer
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedChannel'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedChannel'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedChannel'
      security:
      - jwtAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Channel'
          description: ''
  /api/direct-messages/:
    get:
      operationId: api_direct_messages_list
      tags:
      - api
      security:
      - jwtAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Message'
          description: ''
  /api/explore/:
    get:
      operationId: api_explore_list
      tags:
      - api
      security:
      - jwtAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Server'
          description: ''
  /api/explore/{category}/:
    get:
      operationId: api_explore_retrieve
      parameters:
      - in: path
        name: category
        schema:
          type: string
        required: true
      tags:
      - api
      security:
      - jwtAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Server'
          description: ''
  /api/group/:
    get:
      operationId: api_group_list
      tags:
      - api
      security:
      - jwtAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Group'
          description: ''
  /api/group/{id}/:
    get:
      operationId: api_group_retrieve
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this group.
        required: true
      tags:
      - api
      security:
      - jwtAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Group'
          description: ''
  /api/group/{id}/members/:
    get:
      operationId: api_group_members_list
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this group membership.
        required: true
      tags:
      - api
      security:
      - jwtAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/GroupMembers'
          description: ''
  /api/group/{id}/messages/:
    get:
      operationId: api_group_messages_list
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this message.
        required: true
      tags:
      - api
      security:
      - jwtAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Message'
          description: ''
  /api/group/create/:
    post:
      operationId: api_group_create_create
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Group'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Group'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Group'
        required: true
      security:
      - jwtAuth: []
      - {}
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Group'
          description: ''
  /api/group/delete/{id}/:
    delete:
      operationId: api_group_delete_destroy
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this group.
        required: true
      tags:
      - api
      security:
      - jwtAuth: []
      - {}
      responses:
        '204':
          description: No response body
  /api/group/update/{id}/:
    put:
      operationId: api_group_update_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this group.
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Group'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Group'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Group'
        required: true
      security:
      - jwtAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Group'
          description: ''
    patch:
      operationId: api_group_update_partial_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this group.
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedGroup'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedGroup'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedGroup'
      security:
      - jwtAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Group'
          description: ''
  /api/login/:
    post:
      operationId: api_login_create
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/User'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/User'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/User'
        required: true
      security:
      - jwtAuth: []
      - {}
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
          description: ''
  /api/register/:
    post:
      operationId: api_register_create
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/User'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/User'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/User'
        required: true
      security:
      - jwtAuth: []
      - {}
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
          description: ''
  /api/schema/:
    get:
      operationId: api_schema_retrieve
      description: |-
        OpenApi3 schema for this API. Format can be selected via content negotiation.

        - YAML: application/vnd.oai.openapi
        - JSON: application/vnd.oai.openapi+json
      parameters:
      - in: query
        name: format
        schema:
          type: string
          enum:
          - json
          - yaml
      - in: query
        name: lang
        schema:
          type: string
          enum:
          - af
          - ar
          - ar-dz
          - ast
          - az
          - be
          - bg
          - bn
          - br
          - bs
          - ca
          - ckb
          - cs
          - cy
          - da
          - de
          - dsb
          - el
          - en
          - en-au
          - en-gb
          - eo
          - es
          - es-ar
          - es-co
          - es-mx
          - es-ni
          - es-ve
          - et
          - eu
          - fa
          - fi
          - fr
          - fy
          - ga
          - gd
          - gl
          - he
          - hi
          - hr
          - hsb
          - hu
          - hy
          - ia
          - id
          - ig
          - io
          - is
          - it
          - ja
          - ka
          - kab
          - kk
          - km
          - kn
          - ko
          - ky
          - lb
          - lt
          - lv
          - mk
          - ml
          - mn
          - mr
          - ms
          - my
          - nb
          - ne
          - nl
          - nn
          - os
          - pa
          - pl
          - pt
          - pt-br
          - ro
          - ru
          - sk
          - sl
          - sq
          - sr
          - sr-latn
          - sv
          - sw
          - ta
          - te
          - tg
          - th
          - tk
          - tr
          - tt
          - udm
          - uk
          - ur
          - uz
          - vi
          - zh-hans
          - zh-hant
      tags:
      - api
      security:
      - jwtAuth: []
      - {}
      responses:
        '200':
          content:
            application/vnd.oai.openapi:
              schema:
                type: object
                additionalProperties: {}
            application/yaml:
              schema:
                type: object
                additionalProperties: {}
            application/vnd.oai.openapi+json:
              schema:
                type: object
                additionalProperties: {}
            application/json:
              schema:
                type: object
                additionalProperties: {}
          description: ''
  /api/server/:
    get:
      operationId: api_server_list
      tags:
      - api
      security:
      - jwtAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Server'
          description: ''
  /api/server/{id}/:
    get:
      operationId: api_server_retrieve
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this server.
        required: true
      tags:
      - api
      security:
      - jwtAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Server'
          description: ''
  /api/server/{id}/members/:
    get:
      operationId: api_server_members_list
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this membership.
        required: true
      tags:
      - api
      security:
      - jwtAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ServerMembers'
          description: ''
  /api/server/create/:
    post:
      operationId: api_server_create_create
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Server'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Server'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Server'
        required: true
      security:
      - jwtAuth: []
      - {}
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Server'
          description: ''
  /api/server/delete/{id}/:
    delete:
      operationId: api_server_delete_destroy
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this server.
        required: true
      tags:
      - api
      security:
      - jwtAuth: []
      - {}
      responses:
        '204':
          description: No response body
  /api/server/update/{id}/:
    put:
      operationId: api_server_update_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this server.
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Server'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Server'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Server'
        required: true
      security:
      - jwtAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Server'
          description: ''
    patch:
      operationId: api_server_update_partial_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this server.
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedServer'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedServer'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedServer'
      security:
      - jwtAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Server'
          description: ''
  /api/user/{user_id}/:
    get:
      operationId: api_user_retrieve
      parameters:
      - in: path
        name: user_id
        schema:
          type: integer
        required: true
      tags:
      - api
      security:
      - jwtAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
          description: ''
  /api/user/logout/blacklist/:
    post:
      operationId: api_user_logout_blacklist_create
      tags:
      - api
      security:
      - jwtAuth: []
      - {}
      responses:
        '200':
          description: No response body
  /api/user/register/:
    post:
      operationId: api_user_register_create
      tags:
      - api
      security:
      - jwtAuth: []
      - {}
      responses:
        '200':
          description: No response body
  /api/user/token/:
    post:
      operationId: api_user_token_create
      description: |-
        Takes a set of user credentials and returns an access and refresh JSON web
        token pair to prove the authentication of those credentials.
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TokenObtainPair'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/TokenObtainPair'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/TokenObtainPair'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TokenObtainPair'
          description: ''
  /api/user/token/refresh/:
    post:
      operationId: api_user_token_refresh_create
      description: |-
        Takes a refresh type JSON web token and returns an access type JSON web
        token if the refresh token is valid.
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TokenRefresh'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/TokenRefresh'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/TokenRefresh'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TokenRefresh'
          description: ''
components:
  schemas:
    CategoryEnum:
      enum:
      - gaming
      - educational
      - science-and-tech
      - entertainment
      type: string
      description: |-
        * `gaming` - Gaming
        * `educational` - Educational
        * `science-and-tech` - Science and Tech
        * `entertainment` - Entertainment
    Channel:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        name:
          type: string
          maxLength: 255
        channel_type:
          $ref: '#/components/schemas/ChannelTypeEnum'
        created_at:
          type: string
          format: date-time
          readOnly: true
        server:
          type: integer
      required:
      - channel_type
      - created_at
      - id
      - name
      - server
    ChannelTypeEnum:
      enum:
      - text
      - voice
      - video
      - file
      type: string
      description: |-
        * `text` - Text
        * `voice` - Voice
        * `video` - Video
        * `file` - File
    Group:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        name:
          type: string
          maxLength: 255
        avatar:
          type: string
          format: uri
          nullable: true
        members:
          type: array
          items:
            type: integer
          readOnly: true
      required:
      - id
      - members
      - name
    GroupMembers:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        is_admin:
          type: boolean
        user:
          type: integer
        group:
          type: integer
      required:
      - group
      - id
      - user
    Message:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        object_id:
          type: integer
          maximum: 2147483647
          minimum: 0
        content:
          type: string
        timestamp:
          type: string
          format: date-time
          readOnly: true
        user:
          type: integer
        content_type:
          type: integer
      required:
      - content
      - content_type
      - id
      - object_id
      - timestamp
      - user
    PatchedChannel:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        name:
          type: string
          maxLength: 255
        channel_type:
          $ref: '#/components/schemas/ChannelTypeEnum'
        created_at:
          type: string
          format: date-time
          readOnly: true
        server:
          type: integer
    PatchedGroup:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        name:
          type: string
          maxLength: 255
        avatar:
          type: string
          format: uri
          nullable: true
        members:
          type: array
          items:
            type: integer
          readOnly: true
    PatchedServer:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        name:
          type: string
          maxLength: 255
        is_paid:
          type: boolean
        avatar:
          type: string
          format: uri
          nullable: true
        cover:
          type: string
          format: uri
          nullable: true
        description:
          type: string
          nullable: true
          maxLength: 190
        category:
          $ref: '#/components/schemas/CategoryEnum'
        created_at:
          type: string
          format: date-time
          readOnly: true
        owner:
          type: integer
    Server:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        name:
          type: string
          maxLength: 255
        is_paid:
          type: boolean
        avatar:
          type: string
          format: uri
          nullable: true
        cover:
          type: string
          format: uri
          nullable: true
        description:
          type: string
          nullable: true
          maxLength: 190
        category:
          $ref: '#/components/schemas/CategoryEnum'
        created_at:
          type: string
          format: date-time
          readOnly: true
        owner:
          type: integer
      required:
      - category
      - created_at
      - id
      - name
      - owner
    ServerMembers:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        is_admin:
          type: boolean
        user:
          type: integer
        server:
          type: integer
      required:
      - id
      - server
      - user
    TokenObtainPair:
      type: object
      properties:
        email:
          type: string
          writeOnly: true
        password:
          type: string
          writeOnly: true
        access:
          type: string
          readOnly: true
        refresh:
          type: string
          readOnly: true
      required:
      - access
      - email
      - password
      - refresh
    TokenRefresh:
      type: object
      properties:
        access:
          type: string
          readOnly: true
        refresh:
          type: string
      required:
      - access
      - refresh
    User:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        password:
          type: string
          maxLength: 128
        last_login:
          type: string
          format: date-time
          nullable: true
        email:
          type: string
          format: email
          maxLength: 254
        username:
          type: string
        phone_number:
          type: string
          nullable: true
          maxLength: 20
        avatar:
          type: string
          format: uri
          nullable: true
        cover:
          type: string
          format: uri
          nullable: true
        date_joined:
          type: string
          format: date-time
          readOnly: true
        is_active:
          type: boolean
        is_staff:
          type: boolean
        is_superuser:
          type: boolean
        bio:
          type: string
        groups:
          type: array
          items:
            type: integer
          description: The groups this user belongs to. A user will get all permissions
            granted to each of their groups.
        user_permissions:
          type: array
          items:
            type: integer
          description: Specific permissions for this user.
      required:
      - date_joined
      - email
      - id
      - password
      - username
  securitySchemes:
    jwtAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
